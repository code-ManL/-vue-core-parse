{"code":"import { toRaw } from './reactive';\r\nimport { ITERATE_KEY, track, trigger } from './effect';\r\nimport { hasChanged, hasOwn, isArray, isIntegerKey } from '@vue/shared';\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        // 如果target已经被代理过了就直接返回true\r\n        if (key === \"__v_isReactive\" /* ReactiveFlags.IS_REACTIVE */) {\r\n            return true;\r\n        }\r\n        else if (key === \"__v_raw\" /* ReactiveFlags.RAW */) {\r\n            return target;\r\n        }\r\n        // 触发getter收集副作用函数effect\r\n        track(target, key);\r\n        return Reflect.get(target, key, receiver);\r\n    };\r\n}\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        // 拿到旧值,便于触发更新前的比较\r\n        let oldValue = target[key];\r\n        /**\r\n         *  # hadKey 这一步用来判断当前访问的key,是否是target自身的属性，如果是的话表示当前的set操作是修改数据，反之则是增添属性的操作\r\n         *\r\n         *  # hadKey 这一步其实有2个作用\r\n         *    1.针对数组，判断原始数组是否有这个key\r\n         *        如果当前的原始对象是数组类型，并且key是数字类型，或者字符串的数字类型( 0 or '0')，执行 Number(key) < target.length 判单数组有没有这个key\r\n         *    2.针对对象，判断原始对象是否有这个key\r\n         *        如果当前的原始对象是对象类型，执行 hasOwn(target, key) ，判断自身是否含有key（不包括原型链上的属性）\r\n         */\r\n        const hadKey = isArray(target) && isIntegerKey(key) ? Number(key) < target.length : hasOwn(target, key);\r\n        // 需要先设置值，再去追踪，重新执行副作用函数，否者执行副作用函数的时候值没有发生变化\r\n        const res = Reflect.set(target, key, value, receiver);\r\n        // 这里判断当前代理对象的原始对象是否为target,防止原型链setter触发导致重复触发trigger\r\n        if (target === toRaw(receiver)) {\r\n            // 如果没有访问的key，无论是对于数组还是对象，都是新增属性\r\n            if (!hadKey) {\r\n                trigger(target, key, \"add\" /* TriggerOpTypes.ADD */);\r\n            }\r\n            else if (hasChanged(value, oldValue)) { // 如果我们修改的属性值和原来的值一样，没必要去更新，影响性能\r\n                trigger(target, key, \"set\" /* TriggerOpTypes.SET */);\r\n            }\r\n        }\r\n        return res;\r\n    };\r\n}\r\n// 'foo' in p \r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    track(target, key);\r\n    return result;\r\n}\r\n// for in \r\nfunction ownKeys(target) {\r\n    // 判断当前遍历的对象是object类型还是数组类型\r\n    const key = isArray(target) ? 'length' : ITERATE_KEY;\r\n    track(target, key, \"iterate\" /* TrackOpTypes.ITERATE */);\r\n    return Reflect.ownKeys(target);\r\n}\r\n// 删除属性的时候触发\r\nfunction deleteProperty(target, key) {\r\n    // 判断要删除的属性是否存在当前的target身上\r\n    const hadKey = hasOwn(target, key);\r\n    const result = Reflect.deleteProperty(target, key);\r\n    // 当前 target 存在要删除的属性,并且成功删除了\r\n    if (result && hadKey) {\r\n        trigger(target, key, \"delete\" /* TriggerOpTypes.DELETE */);\r\n    }\r\n    return result;\r\n}\r\nconst get = createGetter();\r\nconst set = createSetter();\r\nexport const mutableHandlers = {\r\n    get,\r\n    set,\r\n    has,\r\n    ownKeys,\r\n    deleteProperty\r\n};\r\n//# sourceMappingURL=baseHandlers.js.map","references":["F:/forTest/v-rmake/packages/reactivity/src/reactive.ts","F:/forTest/v-rmake/packages/reactivity/src/effect.ts","F:/forTest/v-rmake/packages/shared/src/index.ts","F:/forTest/v-rmake/packages/reactivity/src/operations.ts"],"map":"{\"version\":3,\"file\":\"baseHandlers.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../packages/reactivity/src/baseHandlers.ts\"],\"names\":[],\"mappings\":\"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\"}"}
