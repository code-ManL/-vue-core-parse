{"code":"import { toRaw, toReactive } from './reactive';\r\nimport { isTracking, trackEffects } from './effect';\r\n// ref入口函数\r\nexport function ref(value) {\r\n    // 内部调用 createRef 函数，尾调用优化\r\n    return createRef(value, false);\r\n}\r\n// 真正创建 ref 实例的构造韩素华\r\nfunction createRef(rawValue, shallow) {\r\n    // 判断传入的值是否为ref的实例，如果是直接返回\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    // 如果不是，调用RefImpl构造函数，即创建ref实例 ， value,false\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\n// ref\r\nclass RefImpl {\r\n    __v_isShallow;\r\n    _value;\r\n    _rawValue;\r\n    dep = undefined;\r\n    // 判断当前的实例是否为Ref对象\r\n    __v_isRef = true;\r\n    // 这里ref 的 __v_isShallow 为false，用于判断是不是浅层次的响应式,即判断调用的函数时shallowRef 还是 ref\r\n    constructor(value, __v_isShallow) {\r\n        this.__v_isShallow = __v_isShallow;\r\n        // 这里传入的值可能是一个reactive代理的响应式对象，因此通过toRaw方法，返回reactive代理的原始对象\r\n        this._rawValue = __v_isShallow ? value : toRaw(value); // 访问value['__v_raw]获取到原始对象并进行保存\r\n        // 对原始数据进行代理\r\n        this._value = __v_isShallow ? value : toReactive(value);\r\n        /**\r\n         *  执行到这里的时候,ref的实例已经是创建完成\r\n         *    让我们回顾整个创建的过程\r\n         *      1.首先我们是获取了传入的数据的原始数据\r\n         *      2.判断原始数据的数据类型是否为对象类型,如果是对象调用 reactive 进行代理,反之返回原始数据\r\n         *      3.将最终处理的数据保存在 _value 当中,基本数据类型就是基本数据类型,引用类型就通过 reactive 代理\r\n         */\r\n    }\r\n    /**\r\n     * 通过ref实例.value 获取到 _value 的值，_value值的类型根据 toReactive()的返回结果决定，\r\n     * 如果不是对象就是原始值。如果是对象，返回的是通过 reactive() 包装后的对象，也就是通过 Proxy() 代理的\r\n     */\r\n    get value() {\r\n        // 取值的时候依赖收集\r\n        if (isTracking()) {\r\n            trackEffects(this.dep || (this.dep = new Set()));\r\n        }\r\n        return this._value;\r\n    }\r\n    // 在这里，无论是ref还是shallowRef的实例对象，都是同样的方式进行存储\r\n    set value(newVal) {\r\n        // 设置值的时候触发更新\r\n        if (newVal !== this._rawValue) {\r\n            this._rawValue = newVal;\r\n            this._value = toReactive(newVal);\r\n            trackEffects(this.dep);\r\n        }\r\n    }\r\n}\r\nexport function shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\n// 如果传入ref的对象，已经是 ref 的实例\r\nexport function isRef(r) {\r\n    return !!(r && r.__v_isRef === true);\r\n}\r\n//# sourceMappingURL=ref.js.map","references":["F:/forTest/v-rmake/packages/reactivity/src/dep.ts","F:/forTest/v-rmake/packages/shared/src/index.ts","F:/forTest/v-rmake/packages/reactivity/src/reactive.ts","F:/forTest/v-rmake/packages/reactivity/src/effect.ts"],"map":"{\"version\":3,\"file\":\"ref.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../packages/reactivity/src/ref.ts\"],\"names\":[],\"mappings\":\"AAEA,OAAO,EAAY,KAAK,EAAE,UAAU,EAAE,MAAM,YAAY,CAAA;AACxD,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,MAAM,UAAU,CAAA;AAEnD,UAAU;AACV,MAAM,UAAU,GAAG,CAAC,KAAe;IACjC,0BAA0B;IAC1B,OAAO,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;AAChC,CAAC;AAED,oBAAoB;AACpB,SAAS,SAAS,CAAC,QAAiB,EAAE,OAAgB;IACpD,0BAA0B;IAC1B,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE;QACnB,OAAO,QAAQ,CAAA;KAChB;IAED,4CAA4C;IAC5C,OAAO,IAAI,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;AACvC,CAAC;AAED,MAAM;AACN,MAAM,OAAO;IAU2B;IAT9B,MAAM,CAAG;IACT,SAAS,CAAG;IAEb,GAAG,GAAS,SAAS,CAAA;IAE5B,kBAAkB;IACF,SAAS,GAAG,IAAI,CAAA;IAEhC,yEAAyE;IACzE,YAAY,KAAQ,EAAkB,aAAsB;QAAtB,kBAAa,GAAb,aAAa,CAAS;QAE1D,4DAA4D;QAC5D,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA,CAAC,gCAAgC;QAEtF,YAAY;QACZ,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAA;QAEvD;;;;;;WAMG;IACL,CAAC;IAED;;;OAGG;IACH,IAAI,KAAK;QACP,YAAY;QACZ,IAAI,UAAU,EAAE,EAAE;YAChB,YAAY,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC,CAAA;SACjD;QACD,OAAO,IAAI,CAAC,MAAM,CAAA;IACpB,CAAC;IAED,0CAA0C;IAC1C,IAAI,KAAK,CAAC,MAAM;QACd,aAAa;QACb,IAAI,MAAM,KAAK,IAAI,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAA;YACvB,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,CAAA;YAChC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;SACvB;IACH,CAAC;CACF;AAOD,MAAM,UAAU,UAAU,CAAC,KAAe;IACxC,OAAO,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA;AAC/B,CAAC;AAUD,yBAAyB;AACzB,MAAM,UAAU,KAAK,CAAC,CAAM;IAC1B,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,KAAK,IAAI,CAAC,CAAA;AACtC,CAAC\"}"}
